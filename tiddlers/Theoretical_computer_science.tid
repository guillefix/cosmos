created: 20160201145156881
creator: guillefix
modified: 20160825171007525
modifier: cosmos
tags: [[Computer Science and IT]]
title: Theoretical computer science
type: text/vnd.tiddlywiki

''Computer science'' is what came out of asking: <b>what kind of [[maths|Mathematics]] can actually be //effectively// carried out in the [[physical|Physics]] world?</b> Theoretical computer science, looks at the more theoretical (as opposed to applied) aspects of this question.

The nature of computation by Moore and Mertens (looks like a nice book). [[Good reads page|http://www.goodreads.com/book/show/3043127-the-nature-of-computation]] and [[Amazon page|http://www.amazon.co.uk/The-Nature-Computation-Cristopher-Moore/dp/0199233217]]

[[Oxford course 1st year|http://www.cs.ox.ac.uk/teaching/bacompsci/PreliminaryExaminations/]]

[[Computational learning theory|http://www.cs.ox.ac.uk/teaching/courses/2015-2016/clt/]]

[[Leonid A. Levin. Fundamentals of Computing.|http://www.cs.bu.edu/fac/lnd/toc/]]

See [[Discrete mathematics]]

----------

[[Structure and interpretation of computer programs|https://mitpress.mit.edu/sicp/full-text/book/book.html]] [[Companion site|https://mitpress.mit.edu/sicp/]]

__Functional programming__

[[Oxford course - func prog|http://www.cs.ox.ac.uk/teaching/courses/2015-2016/fp/]]

http://learnyouahaskell.com/introduction

https://www.haskell.org/

Higher-order functions. Composition.

Examples in JS: .filter, map, reduce

---------

[[Theory of computation]]


[[Church-Turing thesis]]

----------

[[People, Problems, and Proofs|http://www.springer.com/us/book/9783642414213]]

[[Emergence, Complexity and Computation|http://link.springer.com/bookseries/10624]]

[[Philosophy of computer science]]